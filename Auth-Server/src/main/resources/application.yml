spring:
  application:
    name: uaa-service

# Define the port where the UAA server would be running
server:
  port: 8080
  # Use different context-path to avoid session cookie overlapping
  context-path: /uaa
  use-forward-headers: false

# Define the Eureka server that handles service registration
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/
    fetch-registry: true
  instance:
    preferIpAddress: true
    statusPageUrlPath: /info
    healthCheckUrlPath: /health
    leaseRenewalIntervalInSeconds: 5
    metadataMap:
      instanceId: "${spring.application.name}:${random.value}"

# Define security
security:
  basic:
    enabled: false
  oauth2:
    client:
      access-token-uri: http://auth:8080/uaa/oauth/token
      client-id: acme
      client-secret: acmesecret
      scope: openid
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----
      id: openid
      serviceId: ${PREFIX:}resource
  user:
    password: password
  ignored: /css/**,/js/**,/favicon.ico,/webjars/**

logging:
  level.org.springframework.security: DEBUG
